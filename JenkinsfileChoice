#!/usr/bin/env groovy
library("my-shared-library@master") _

String items = populateItems(cons.servers)
String populateItems(Map serversList){
    List vegetablesList1 = serversList['DEV']['APP'].collect{ '"' + it + '"'}
    List fruitsList1 = serversList['QA']['APP'].collect{ '"' + it + '"'}
    return """if(Categories.equals('DEV')){
        return $vegetablesList1
        }
        else if(Categories.equals('QA')){
        return $fruitsList1
        }else{
        return ["Not Applicable"]
        }
        """
}
// Properties step to set the Active choice parameters via 
// Declarative Scripting
properties([
    parameters([
        choice(name: 'Categories', choices: cons.envir, description: 'input cluster'),
       [$class: 'CascadeChoiceParameter', choiceType: 'PT_SINGLE_SELECT',name: 'Items', referencedParameters: 'Categories', 
          script: [$class: 'GroovyScript', fallbackScript: [classpath: [], sandbox: false, script: 'return ["error"]'], 
              script: [classpath: [], sandbox: false, script: items]]]
    ])
])
pipeline {
    agent any
stages {
   stage('Build'){
    steps {
       echo 'Building..'
      }
    }
   }
}
