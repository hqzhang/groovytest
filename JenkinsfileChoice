#!/usr/bin/env groovy
library("my-shared-library@master") _

// Properties step to set the Active choice parameters via 
// Declarative Scripting
properties([
    parameters([
        choice(name: 'Environment', choices: cons.envir, description: 'input cluster'),
       [$class: 'CascadeChoiceParameter', choiceType: 'PT_SINGLE_SELECT',
         name: 'targtServer', referencedParameters: 'Environment', 
          script: [$class: 'GroovyScript', 
                   fallbackScript: [classpath: [], sandbox: false, 
                                     script: 'return ["error"]'], 
          script: [classpath: [], sandbox: false, 
                    script: cons.selectServers('Environment')]]],
        extendedChoice(
              name: 'Branches',
              description: '',
              visibleItemCount: 50,
              multiSelectDelimiter: ',',
              type: 'PT_SINGLE_SELECT',
              groovyScript: '''
                 def mf ="ls /Users/hongqizhang/workspace/groovytest/mydir  ".execute().text
                 mf.readLines().collect{ it.split()[0].minus('.xml')}
              ''', ),
             string(name: 'payload', defaultValue: 'Mr Jenkins', description: 'A payload from github webhook'),
    ])
])
pipeline {
    agent any
stages {
   stage('Build'){
    steps {
       echo 'Building..'
      }
    }
   }
}
