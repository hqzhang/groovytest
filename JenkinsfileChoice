#!/usr/bin/env groovy
library("my-shared-library@master") _

// Properties step to set the Active choice parameters via 
println "getserver------"
println cons.getServers('Environment')
println cons.getServers1('CompType')
println cons.getComponents('Comptype')
println "end------"

properties([
    parameters([
        extendedChoice(
            name: 'Environment', defaultValue: 'BAT',
            description: 'This is for environment name',
            visibleItemCount: 50, multiSelectDelimiter: ',', type: 'PT_SINGLE_SELECT',
            groovyScript: cons.getEnvironment(), ),
        
        [$class: 'CascadeChoiceParameter', choiceType: 'PT_SINGLE_SELECT',
          name: 'targtServer', description: 'This is for target server name',
          referencedParameters: 'Environment', 
          script: [$class: 'GroovyScript', 
                   fallbackScript: [classpath: [], sandbox: false, 
                                     script: 'return ["error"]'], 
          script: [classpath: [], sandbox: false, 
                    script: cons.getServers('Environment')]]],
         choice(name: 'CompType', choices: ['dev','qa','prod'], description: 'input cluster type'),
         [$class: 'CascadeChoiceParameter', choiceType: 'PT_SINGLE_SELECT',
          name: 'targtServer', description: 'This is for target server name',
          referencedParameters: 'Environment', 
          script: [$class: 'GroovyScript', 
                   fallbackScript: [classpath: [], sandbox: false, 
                                     script: 'return ["error"]'], 
          script: [classpath: [], sandbox: false, 
                    script: cons.getComponents('CompType')]]],
        extendedChoice( 
            name: 'TagName', //defaultValue: 'test2', 
            description: 'tag name', 
            type: 'PT_SINGLE_SELECT',
            defaultGroovyScript: cons.getDefaultTag(),
            groovyScript: cons.getTags(), ),
        extendedChoice(
            name: 'myBranch', //defaultValue: 'test2', 
            description: 'branch name',
            visibleItemCount: 50,
            multiSelectDelimiter: ',',
            type: 'PT_SINGLE_SELECT',
            groovyScript: cons.getBranches(), ),
        extendedChoice(
            name: 'myFile',//defaultValue: 'test2', 
            defaultValue: 'BAT',
            description: 'file name',
            visibleItemCount: 50,
            multiSelectDelimiter: ',',
            type: 'PT_SINGLE_SELECT',
            groovyScript: 'return ["A","B"]', ),
         [$class: 'ChoiceParameter', choiceType: 'PT_SINGLE_SELECT',  
          name: 'Environment1', 
          script: [$class: 'GroovyScript', 
          fallbackScript: [classpath: [], sandbox: false, script: 'return ["ERROR"]'], 
                          script: [classpath: [], sandbox: false,
                          script:  cons.getEnvironment('DEV')]]],
                 
              
    ])
])
pipeline {
    agent any
stages {
   stage('Build'){
    steps {
       echo 'Building..'
      }
    }
   }
}
